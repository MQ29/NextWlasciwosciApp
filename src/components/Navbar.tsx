'use client';

import dynamic from 'next/dynamic';
import { useState, useEffect } from 'react';
import { auth } from '@/firebase';
import { useRouter } from 'next/navigation';
import Link from 'next/link';

const Navbar = () => {
    const [isAdmin, setIsAdmin] = useState(false);
    const [isLoggedIn, setIsLoggedIn] = useState(false);
    const [loading, setLoading] = useState(true);
    const router = useRouter();

    useEffect(() => {
        const checkUser = async () => {
            const user = auth.currentUser;
            if (user) {
                const tokenResult = await user.getIdTokenResult();
                setIsAdmin(!!tokenResult.claims.admin);
                setIsLoggedIn(true);
            } else {
                setIsAdmin(false);
                setIsLoggedIn(false);
            }
            setLoading(false);
        };

        const unsubscribe = auth.onAuthStateChanged(() => {
            checkUser();
        });

        return () => unsubscribe();
    }, []);

    const handleLogout = async () => {
        await auth.signOut();
        router.replace('/supplements');
    };

    if (loading) {
        return (
            <nav className="bg-indigo-600 text-white p-4">
                <div className="container mx-auto flex justify-between items-center">
                    <span>Ładowanie...</span>
                </div>
            </nav>
        );
    }

    return (
        <nav className="bg-indigo-600 text-white p-4 sticky top-0 z-50">
            <div className="container mx-auto flex justify-between items-center">
                <Link href="/">
                    <svg
                        xmlns="http://www.w3.org/2000/svg"
                        width="186"
                        height="37"
                        fill="none"
                        className="cursor-pointer"
                    >
                        <g data-testid="Vector" style={{ fill: "rgb(255, 255, 255)" }}>
                            <path
                                d="m17.387 16.532 3.821-3.785a5.53 5.53 0 0 1 4.108-1.598l.076.003.017-.001a5.517 5.517 0 0 1 3.315 1.325 5.432 5.432 0 0 1 .294 8.006l-3.827 3.79-7.804-7.74Zm8.01-7.576a7.756 7.756 0 0 0-5.755 2.24l-3.845 3.808v-.003l-1.545 1.53 1.545 1.532v-.003l9.393 9.316 5.394-5.343a7.608 7.608 0 0 0-.409-11.215 7.762 7.762 0 0 0-4.778-1.862Zm-9.6-1.07v4.479l-4.206 4.166-5.744 5.689h-.001a9.46 9.46 0 0 0-2.489 9.208 7.676 7.676 0 0 1-2.513-3.311 7.6 7.6 0 0 1-.523-2.776V7.886C.321 3.654 3.786.223 8.059.223c4.274 0 7.738 3.431 7.738 7.663ZM4.28 20.668l9.302-9.212v-3.57c0-3.02-2.473-5.469-5.523-5.469S2.537 4.866 2.537 7.886v14.976a11.752 11.752 0 0 1 1.743-2.194Zm8.642-2.817Zl10.937 10.843-5.737 5.683c-3.022 2.992-7.921 2.992-10.943 0a7.76 7.76 0 0 1-1.282-1.675h-.002a7.61 7.61 0 0 1 1.282-9.164l5.745-5.687ZM8.744 25.09a5.433 5.433 0 0 0-.98 6.423l.066.117c.241.426.545.828.916 1.195a5.56 5.56 0 0 0 7.81 0l4.171-4.132-7.806-7.741-4.177 4.138Zm34.834 9.287c-3.021 2.993-7.921 2.993-10.942 0l-5.929-5.872 5.206-5.156a9.447 9.447 0 0 0 2.7-8.222 9.39 9.39 0 0 0-.109-.575l9.074 8.987.001.001a7.608 7.608 0 0 1 1.282 9.163h-.001a7.65 7.65 0 0 1-1.282 1.674Zm-9.376-1.551-4.362-4.321 3.639-3.604a11.65 11.65 0 0 0 3.059-5.232l5.475 5.422a5.434 5.434 0 0 1 .933 6.508l-.018.031a5.495 5.495 0 0 1-.916 1.196 5.561 5.561 0 0 1-7.81 0Zm10.707-10.605-9.95-9.855V7.888c0-4.233 3.465-7.664 7.738-7.664 4.274 0 7.738 3.431 7.738 7.664v17.455a7.598 7.598 0 0 1-2.607 5.736 7.192 7.192 0 0 1-.429.35 9.46 9.46 0 0 0-2.49-9.208Zm3.31-14.333v14.975a11.713 11.713 0 0 0-1.743-2.193l-9.302-9.212v-3.57c0-3.021 2.473-5.47 5.523-5.47s5.522 2.449 5.522 5.47Zm17.777 18.827-.966-6.348-1.323-6.777H60.4l3.892 17.131h3.129l3.357-12.747 3.332 12.747h3.129l3.892-17.131h-3.104l-1.322 6.777-1.069 6.247-3.433-13.024h-2.747l-3.46 13.125Zm17.098-14.636v15.039c0 .605.093 1.193.28 1.764a2.919 2.919 0 0 0 1.068 1.41c.509.37 1.246.555 2.213.555h.712v-2.671h-.407c-.373 0-.627-.109-.763-.327a1.6 1.6 0 0 1-.178-.731V12.079h-2.925Zm13.032 16.929c.237.52.611.957 1.119 1.31.526.352 1.221.529 2.086.529h.585v-2.671h-.28c-.424 0-.712-.109-.864-.327a1.441 1.441 0 0 1-.204-.731v-4.912c0-.789-.135-1.528-.407-2.217-.271-.689-.755-1.243-1.45-1.663-.678-.419-1.645-.629-2.899-.629-1.391 0-2.943.344-4.655 1.032l.839 2.469c.695-.285 1.34-.495 1.933-.63a7.884 7.884 0 0 1 1.679-.201c.661 0 1.187.134 1.577.403.39.252.585.731.585 1.436v1.486a20.483 20.483 0 0 0-1.424-.201 9.693 9.693 0 0 0-1.374-.101c-1.119 0-2.001.159-2.645.479-.644.319-1.111.764-1.399 1.335-.272.554-.407 1.2-.407 1.939 0 1.109.263 2.024.788 2.746.543.722 1.382 1.084 2.519 1.084.78 0 1.509-.16 2.187-.479.678-.319 1.382-.815 2.111-1.486Zm-4.476-.832c-.204-.268-.306-.63-.306-1.083 0-.504.136-.89.407-1.159.288-.269.763-.403 1.425-.403.847 0 1.712.076 2.594.227v1.083c-.78.739-1.416 1.209-1.908 1.411-.491.201-.932.302-1.322.302s-.687-.126-.89-.378Zm15.333-.025c-.407.202-.924.302-1.551.302a8.59 8.59 0 0 1-1.73-.201 13.176 13.176 0 0 1-2.162-.68l-.788 2.393c1.627.672 3.179 1.008 4.654 1.008 1.73 0 2.993-.37 3.79-1.109.814-.739 1.221-1.696 1.221-2.872 0-.991-.288-1.814-.865-2.469-.559-.654-1.458-1.142-2.696-1.461l-1.45-.377c-.576-.152-.975-.32-1.195-.504-.204-.185-.305-.437-.305-.756 0-.806.601-1.209 1.806-1.209.44 0 .949.067 1.526.201.576.135 1.221.37 1.933.706l.839-2.469c-.78-.336-1.526-.58-2.238-.731a9.82 9.82 0 0 0-2.035-.226c-1.594 0-2.772.369-3.536 1.108-.763.739-1.144 1.654-1.144 2.746 0 .924.263 1.721.788 2.393.543.672 1.374 1.15 2.493 1.436l1.45.378c.678.168 1.145.361 1.399.579.271.202.407.487.407.857 0 .42-.204.739-.611.957Zm8.039-3.073v-1.487c0-1.091.195-1.897.585-2.418.39-.537 1.018-.806 1.883-.806.814 0 1.831.235 3.052.705l.839-2.494a14.817 14.817 0 0 0-2.085-.655 8.788 8.788 0 0 0-1.959-.226c-1.696 0-2.993.537-3.892 1.612-.898 1.058-1.348 2.485-1.348 4.282v1.487c0 1.78.45 3.207 1.348 4.282.899 1.075 2.196 1.613 3.892 1.613.661 0 1.331-.076 2.009-.227a14.405 14.405 0 0 0 2.162-.68l-.839-2.444c-.627.235-1.212.411-1.755.529-.526.101-1 .151-1.424.151-.865 0-1.493-.269-1.883-.806-.39-.537-.585-1.343-.585-2.418Zm8.451-9.548h3.078v-2.998h-3.078v2.998Zm.077 15.191h2.925V17.949h-2.925v12.772Zm19.062 0 3.307-12.772h-2.823l-1.221 5.088-.814 4.686-2.264-9.774h-2.951l-2.187 9.673-.865-4.61-1.246-5.063h-3.002l3.307 12.772h3.179l2.264-9.598 2.137 9.598h3.179Zm15.682-5.643v-1.512c0-1.78-.491-3.199-1.475-4.257-.967-1.075-2.357-1.612-4.171-1.612-1.815 0-3.214.537-4.197 1.612-.967 1.058-1.45 2.477-1.45 4.257v1.512c0 1.78.491 3.207 1.475 4.282.984 1.075 2.374 1.613 4.172 1.613 1.797 0 3.187-.538 4.171-1.613.984-1.075 1.475-2.502 1.475-4.282Zm-3.688-3.905c.458.571.687 1.369.687 2.393v1.512c0 1.024-.229 1.83-.687 2.418-.458.588-1.111.882-1.958.882-.848 0-1.501-.294-1.959-.882-.458-.588-.687-1.394-.687-2.418v-1.512c0-1.024.229-1.822.687-2.393.458-.588 1.111-.882 1.959-.882.847 0 1.5.294 1.958.882Zm11.496 6.978c-.407.202-.924.302-1.552.302a8.589 8.589 0 0 1-1.729-.201 13.146 13.146 0 0 1-2.162-.68l-.789 2.393c1.628.672 3.18 1.008 4.655 1.008 1.73 0 2.993-.37 3.79-1.109.814-.739 1.221-1.696 1.221-2.872 0-.991-.289-1.814-.865-2.469-.56-.654-1.459-1.142-2.696-1.461l-1.45-.377c-.577-.152-.975-.32-1.196-.504-.203-.185-.305-.437-.305-.756 0-.806.602-1.209 1.806-1.209.441 0 .95.067 1.526.201.577.135 1.221.37 1.933.706l.84-2.469c-.78-.336-1.526-.58-2.239-.731a9.81 9.81 0 0 0-2.034-.226c-1.594 0-2.773.369-3.536 1.108-.763.739-1.145 1.654-1.145 2.746 0 .924.263 1.721.789 2.393.542.672 1.373 1.15 2.493 1.436l1.449.378c.679.168 1.145.361 1.399.579.272.202.407.487.407.857 0 .42-.203.739-.61.957Zm8.039-3.073v-1.487c0-1.091.195-1.897.585-2.418.39-.537 1.017-.806 1.882-.806.814 0 1.832.235 3.052.705l.84-2.494a14.827 14.827 0 0 0-2.086-.655 8.773 8.773 0 0 0-1.958-.226c-1.696 0-2.994.537-3.892 1.612-.899 1.058-1.348 2.485-1.348 4.282v1.487c0 1.78.449 3.207 1.348 4.282.898 1.075 2.196 1.613 3.892 1.613.661 0 1.331-.076 2.009-.227a14.441 14.441 0 0 0 2.162-.68l-.839-2.444a12.83 12.83 0 0 1-1.755.529 7.622 7.622 0 0 1-1.425.151c-.865 0-1.492-.269-1.882-.806-.39-.537-.585-1.343-.585-2.418Zm8.451-9.548h3.078v-2.998h-3.078v2.998Zm.076 15.191h2.925V17.949h-2.925v12.772Z"
                                fillRule="evenodd"
                                clipRule="evenodd"
                                style={{ fill: "rgb(255, 255, 255)", fillOpacity: 1 }}
                                data-testid="svg-path"
                            />
                        </g>
                    </svg>
                </Link>
                <div>
                    {!isLoggedIn ? (
                        <>
                            <Link href="/auth/login" className="mr-4">
                                Logowanie
                            </Link>
                            <Link href="/auth/register">Rejestracja</Link>
                        </>
                    ) : (
                        <>
                            <Link href="/profile" className="mr-4">
                                Mój profil
                            </Link>
                            {isAdmin && (
                                <>
                                    <Link href="/admin" className="ml-4">
                                        Filter
                                    </Link>
                                </>
                            )}
                            <button
                                onClick={handleLogout}
                                className="ml-4 bg-red-500 text-white px-4 py-2 rounded"
                            >
                                Wyloguj
                            </button>
                        </>
                    )}
                    <Link href="/author" className="ml-4">
                        O autorze
                    </Link>
                    <Link href="/supplements" className="ml-4">
                        Suplementy
                    </Link>
                </div>
            </div>
        </nav>
    );
};

export default dynamic(() => Promise.resolve(Navbar), { ssr: false });
